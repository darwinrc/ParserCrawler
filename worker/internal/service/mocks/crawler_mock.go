// Code generated by MockGen. DO NOT EDIT.
// Source: crawler.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"
	model "worker/internal/model"

	gomock "github.com/golang/mock/gomock"
)

// MockCrawlerService is a mock of CrawlerService interface.
type MockCrawlerService struct {
	ctrl     *gomock.Controller
	recorder *MockCrawlerServiceMockRecorder
}

// MockCrawlerServiceMockRecorder is the mock recorder for MockCrawlerService.
type MockCrawlerServiceMockRecorder struct {
	mock *MockCrawlerService
}

// NewMockCrawlerService creates a new mock instance.
func NewMockCrawlerService(ctrl *gomock.Controller) *MockCrawlerService {
	mock := &MockCrawlerService{ctrl: ctrl}
	mock.recorder = &MockCrawlerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCrawlerService) EXPECT() *MockCrawlerServiceMockRecorder {
	return m.recorder
}

// Crawl mocks base method.
func (m *MockCrawlerService) Crawl(url string) *model.Sitemap {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Crawl", url)
	ret0, _ := ret[0].(*model.Sitemap)
	return ret0
}

// Crawl indicates an expected call of Crawl.
func (mr *MockCrawlerServiceMockRecorder) Crawl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Crawl", reflect.TypeOf((*MockCrawlerService)(nil).Crawl), url)
}
