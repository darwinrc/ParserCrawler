// Code generated by MockGen. DO NOT EDIT.
// Source: crawler.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCrawlerHandler is a mock of CrawlerHandler interface.
type MockCrawlerHandler struct {
	ctrl     *gomock.Controller
	recorder *MockCrawlerHandlerMockRecorder
}

// MockCrawlerHandlerMockRecorder is the mock recorder for MockCrawlerHandler.
type MockCrawlerHandlerMockRecorder struct {
	mock *MockCrawlerHandler
}

// NewMockCrawlerHandler creates a new mock instance.
func NewMockCrawlerHandler(ctrl *gomock.Controller) *MockCrawlerHandler {
	mock := &MockCrawlerHandler{ctrl: ctrl}
	mock.recorder = &MockCrawlerHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCrawlerHandler) EXPECT() *MockCrawlerHandlerMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockCrawlerHandler) Process() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Process")
}

// Process indicates an expected call of Process.
func (mr *MockCrawlerHandlerMockRecorder) Process() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockCrawlerHandler)(nil).Process))
}
